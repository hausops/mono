// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: pb/property.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PropertyListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Properties []*PropertyResponse `protobuf:"bytes,1,rep,name=properties,proto3" json:"properties,omitempty"`
}

func (x *PropertyListResponse) Reset() {
	*x = PropertyListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_property_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyListResponse) ProtoMessage() {}

func (x *PropertyListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_property_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyListResponse.ProtoReflect.Descriptor instead.
func (*PropertyListResponse) Descriptor() ([]byte, []int) {
	return file_pb_property_proto_rawDescGZIP(), []int{0}
}

func (x *PropertyListResponse) GetProperties() []*PropertyResponse {
	if x != nil {
		return x.Properties
	}
	return nil
}

type PropertyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Property:
	//
	//	*PropertyResponse_SingleFamilyProperty
	//	*PropertyResponse_MultiFamilyProperty
	Property isPropertyResponse_Property `protobuf_oneof:"property"`
}

func (x *PropertyResponse) Reset() {
	*x = PropertyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_property_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyResponse) ProtoMessage() {}

func (x *PropertyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_property_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyResponse.ProtoReflect.Descriptor instead.
func (*PropertyResponse) Descriptor() ([]byte, []int) {
	return file_pb_property_proto_rawDescGZIP(), []int{1}
}

func (m *PropertyResponse) GetProperty() isPropertyResponse_Property {
	if m != nil {
		return m.Property
	}
	return nil
}

func (x *PropertyResponse) GetSingleFamilyProperty() *SingleFamilyProperty {
	if x, ok := x.GetProperty().(*PropertyResponse_SingleFamilyProperty); ok {
		return x.SingleFamilyProperty
	}
	return nil
}

func (x *PropertyResponse) GetMultiFamilyProperty() *MultiFamilyProperty {
	if x, ok := x.GetProperty().(*PropertyResponse_MultiFamilyProperty); ok {
		return x.MultiFamilyProperty
	}
	return nil
}

type isPropertyResponse_Property interface {
	isPropertyResponse_Property()
}

type PropertyResponse_SingleFamilyProperty struct {
	SingleFamilyProperty *SingleFamilyProperty `protobuf:"bytes,1,opt,name=single_family_property,json=singleFamilyProperty,proto3,oneof"`
}

type PropertyResponse_MultiFamilyProperty struct {
	MultiFamilyProperty *MultiFamilyProperty `protobuf:"bytes,2,opt,name=multi_family_property,json=multiFamilyProperty,proto3,oneof"`
}

func (*PropertyResponse_SingleFamilyProperty) isPropertyResponse_Property() {}

func (*PropertyResponse_MultiFamilyProperty) isPropertyResponse_Property() {}

type SingleFamilyProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address       *Address    `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	CoverImageUrl string      `protobuf:"bytes,5,opt,name=cover_image_url,json=coverImageUrl,proto3" json:"cover_image_url,omitempty"`
	YearBuilt     int32       `protobuf:"varint,8,opt,name=year_built,json=yearBuilt,proto3" json:"year_built,omitempty"`
	Unit          *RentalUnit `protobuf:"bytes,12,opt,name=unit,proto3" json:"unit,omitempty"`
	DateCreated   string      `protobuf:"bytes,13,opt,name=date_created,json=dateCreated,proto3" json:"date_created,omitempty"`
	DateUpdated   string      `protobuf:"bytes,14,opt,name=date_updated,json=dateUpdated,proto3" json:"date_updated,omitempty"`
}

func (x *SingleFamilyProperty) Reset() {
	*x = SingleFamilyProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_property_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleFamilyProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleFamilyProperty) ProtoMessage() {}

func (x *SingleFamilyProperty) ProtoReflect() protoreflect.Message {
	mi := &file_pb_property_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleFamilyProperty.ProtoReflect.Descriptor instead.
func (*SingleFamilyProperty) Descriptor() ([]byte, []int) {
	return file_pb_property_proto_rawDescGZIP(), []int{2}
}

func (x *SingleFamilyProperty) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SingleFamilyProperty) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *SingleFamilyProperty) GetCoverImageUrl() string {
	if x != nil {
		return x.CoverImageUrl
	}
	return ""
}

func (x *SingleFamilyProperty) GetYearBuilt() int32 {
	if x != nil {
		return x.YearBuilt
	}
	return 0
}

func (x *SingleFamilyProperty) GetUnit() *RentalUnit {
	if x != nil {
		return x.Unit
	}
	return nil
}

func (x *SingleFamilyProperty) GetDateCreated() string {
	if x != nil {
		return x.DateCreated
	}
	return ""
}

func (x *SingleFamilyProperty) GetDateUpdated() string {
	if x != nil {
		return x.DateUpdated
	}
	return ""
}

type MultiFamilyProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address       *Address      `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	CoverImageUrl string        `protobuf:"bytes,5,opt,name=cover_image_url,json=coverImageUrl,proto3" json:"cover_image_url,omitempty"`
	YearBuilt     int32         `protobuf:"varint,8,opt,name=year_built,json=yearBuilt,proto3" json:"year_built,omitempty"`
	Units         []*RentalUnit `protobuf:"bytes,12,rep,name=units,proto3" json:"units,omitempty"`
	DateCreated   string        `protobuf:"bytes,13,opt,name=date_created,json=dateCreated,proto3" json:"date_created,omitempty"`
	DateUpdated   string        `protobuf:"bytes,14,opt,name=date_updated,json=dateUpdated,proto3" json:"date_updated,omitempty"`
}

func (x *MultiFamilyProperty) Reset() {
	*x = MultiFamilyProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_property_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiFamilyProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiFamilyProperty) ProtoMessage() {}

func (x *MultiFamilyProperty) ProtoReflect() protoreflect.Message {
	mi := &file_pb_property_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiFamilyProperty.ProtoReflect.Descriptor instead.
func (*MultiFamilyProperty) Descriptor() ([]byte, []int) {
	return file_pb_property_proto_rawDescGZIP(), []int{3}
}

func (x *MultiFamilyProperty) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MultiFamilyProperty) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *MultiFamilyProperty) GetCoverImageUrl() string {
	if x != nil {
		return x.CoverImageUrl
	}
	return ""
}

func (x *MultiFamilyProperty) GetYearBuilt() int32 {
	if x != nil {
		return x.YearBuilt
	}
	return 0
}

func (x *MultiFamilyProperty) GetUnits() []*RentalUnit {
	if x != nil {
		return x.Units
	}
	return nil
}

func (x *MultiFamilyProperty) GetDateCreated() string {
	if x != nil {
		return x.DateCreated
	}
	return ""
}

func (x *MultiFamilyProperty) GetDateUpdated() string {
	if x != nil {
		return x.DateUpdated
	}
	return ""
}

type RentalUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Number      string  `protobuf:"bytes,3,opt,name=number,proto3" json:"number,omitempty"`
	Bedrooms    float32 `protobuf:"fixed32,8,opt,name=bedrooms,proto3" json:"bedrooms,omitempty"`
	Bathrooms   float32 `protobuf:"fixed32,9,opt,name=bathrooms,proto3" json:"bathrooms,omitempty"`
	Size        float32 `protobuf:"fixed32,11,opt,name=size,proto3" json:"size,omitempty"`
	RentAmount  float32 `protobuf:"fixed32,12,opt,name=rent_amount,json=rentAmount,proto3" json:"rent_amount,omitempty"`
	DateCreated string  `protobuf:"bytes,13,opt,name=date_created,json=dateCreated,proto3" json:"date_created,omitempty"`
	DateUpdated string  `protobuf:"bytes,14,opt,name=date_updated,json=dateUpdated,proto3" json:"date_updated,omitempty"`
}

func (x *RentalUnit) Reset() {
	*x = RentalUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_property_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RentalUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RentalUnit) ProtoMessage() {}

func (x *RentalUnit) ProtoReflect() protoreflect.Message {
	mi := &file_pb_property_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RentalUnit.ProtoReflect.Descriptor instead.
func (*RentalUnit) Descriptor() ([]byte, []int) {
	return file_pb_property_proto_rawDescGZIP(), []int{4}
}

func (x *RentalUnit) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RentalUnit) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *RentalUnit) GetBedrooms() float32 {
	if x != nil {
		return x.Bedrooms
	}
	return 0
}

func (x *RentalUnit) GetBathrooms() float32 {
	if x != nil {
		return x.Bathrooms
	}
	return 0
}

func (x *RentalUnit) GetSize() float32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *RentalUnit) GetRentAmount() float32 {
	if x != nil {
		return x.RentAmount
	}
	return 0
}

func (x *RentalUnit) GetDateCreated() string {
	if x != nil {
		return x.DateCreated
	}
	return ""
}

func (x *RentalUnit) GetDateUpdated() string {
	if x != nil {
		return x.DateUpdated
	}
	return ""
}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Line1 string `protobuf:"bytes,1,opt,name=line1,proto3" json:"line1,omitempty"`
	Line2 string `protobuf:"bytes,2,opt,name=line2,proto3" json:"line2,omitempty"`
	City  string `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	State string `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	Zip   string `protobuf:"bytes,5,opt,name=zip,proto3" json:"zip,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_property_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_pb_property_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_pb_property_proto_rawDescGZIP(), []int{5}
}

func (x *Address) GetLine1() string {
	if x != nil {
		return x.Line1
	}
	return ""
}

func (x *Address) GetLine2() string {
	if x != nil {
		return x.Line2
	}
	return ""
}

func (x *Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Address) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Address) GetZip() string {
	if x != nil {
		return x.Zip
	}
	return ""
}

type PropertyIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PropertyIDRequest) Reset() {
	*x = PropertyIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_property_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyIDRequest) ProtoMessage() {}

func (x *PropertyIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_property_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyIDRequest.ProtoReflect.Descriptor instead.
func (*PropertyIDRequest) Descriptor() ([]byte, []int) {
	return file_pb_property_proto_rawDescGZIP(), []int{6}
}

func (x *PropertyIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Property:
	//
	//	*PropertyRequest_SingleFamilyProperty
	//	*PropertyRequest_MultiFamilyProperty
	Property isPropertyRequest_Property `protobuf_oneof:"property"`
}

func (x *PropertyRequest) Reset() {
	*x = PropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_property_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyRequest) ProtoMessage() {}

func (x *PropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_property_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyRequest.ProtoReflect.Descriptor instead.
func (*PropertyRequest) Descriptor() ([]byte, []int) {
	return file_pb_property_proto_rawDescGZIP(), []int{7}
}

func (x *PropertyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *PropertyRequest) GetProperty() isPropertyRequest_Property {
	if m != nil {
		return m.Property
	}
	return nil
}

func (x *PropertyRequest) GetSingleFamilyProperty() *SingleFamilyPropertyRequest {
	if x, ok := x.GetProperty().(*PropertyRequest_SingleFamilyProperty); ok {
		return x.SingleFamilyProperty
	}
	return nil
}

func (x *PropertyRequest) GetMultiFamilyProperty() *MultiFamilyPropertyRequest {
	if x, ok := x.GetProperty().(*PropertyRequest_MultiFamilyProperty); ok {
		return x.MultiFamilyProperty
	}
	return nil
}

type isPropertyRequest_Property interface {
	isPropertyRequest_Property()
}

type PropertyRequest_SingleFamilyProperty struct {
	SingleFamilyProperty *SingleFamilyPropertyRequest `protobuf:"bytes,3,opt,name=single_family_property,json=singleFamilyProperty,proto3,oneof"`
}

type PropertyRequest_MultiFamilyProperty struct {
	MultiFamilyProperty *MultiFamilyPropertyRequest `protobuf:"bytes,4,opt,name=multi_family_property,json=multiFamilyProperty,proto3,oneof"`
}

func (*PropertyRequest_SingleFamilyProperty) isPropertyRequest_Property() {}

func (*PropertyRequest_MultiFamilyProperty) isPropertyRequest_Property() {}

type SingleFamilyPropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address       *AddressRequest    `protobuf:"bytes,3,opt,name=address,proto3,oneof" json:"address,omitempty"`
	CoverImageUrl *string            `protobuf:"bytes,5,opt,name=cover_image_url,json=coverImageUrl,proto3,oneof" json:"cover_image_url,omitempty"`
	YearBuilt     *int32             `protobuf:"varint,8,opt,name=year_built,json=yearBuilt,proto3,oneof" json:"year_built,omitempty"`
	Unit          *RentalUnitRequest `protobuf:"bytes,12,opt,name=unit,proto3,oneof" json:"unit,omitempty"`
}

func (x *SingleFamilyPropertyRequest) Reset() {
	*x = SingleFamilyPropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_property_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleFamilyPropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleFamilyPropertyRequest) ProtoMessage() {}

func (x *SingleFamilyPropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_property_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleFamilyPropertyRequest.ProtoReflect.Descriptor instead.
func (*SingleFamilyPropertyRequest) Descriptor() ([]byte, []int) {
	return file_pb_property_proto_rawDescGZIP(), []int{8}
}

func (x *SingleFamilyPropertyRequest) GetAddress() *AddressRequest {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *SingleFamilyPropertyRequest) GetCoverImageUrl() string {
	if x != nil && x.CoverImageUrl != nil {
		return *x.CoverImageUrl
	}
	return ""
}

func (x *SingleFamilyPropertyRequest) GetYearBuilt() int32 {
	if x != nil && x.YearBuilt != nil {
		return *x.YearBuilt
	}
	return 0
}

func (x *SingleFamilyPropertyRequest) GetUnit() *RentalUnitRequest {
	if x != nil {
		return x.Unit
	}
	return nil
}

type MultiFamilyPropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address       *AddressRequest      `protobuf:"bytes,3,opt,name=address,proto3,oneof" json:"address,omitempty"`
	CoverImageUrl *string              `protobuf:"bytes,5,opt,name=cover_image_url,json=coverImageUrl,proto3,oneof" json:"cover_image_url,omitempty"`
	YearBuilt     *int32               `protobuf:"varint,8,opt,name=year_built,json=yearBuilt,proto3,oneof" json:"year_built,omitempty"`
	Units         []*RentalUnitRequest `protobuf:"bytes,12,rep,name=units,proto3" json:"units,omitempty"`
}

func (x *MultiFamilyPropertyRequest) Reset() {
	*x = MultiFamilyPropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_property_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiFamilyPropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiFamilyPropertyRequest) ProtoMessage() {}

func (x *MultiFamilyPropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_property_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiFamilyPropertyRequest.ProtoReflect.Descriptor instead.
func (*MultiFamilyPropertyRequest) Descriptor() ([]byte, []int) {
	return file_pb_property_proto_rawDescGZIP(), []int{9}
}

func (x *MultiFamilyPropertyRequest) GetAddress() *AddressRequest {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *MultiFamilyPropertyRequest) GetCoverImageUrl() string {
	if x != nil && x.CoverImageUrl != nil {
		return *x.CoverImageUrl
	}
	return ""
}

func (x *MultiFamilyPropertyRequest) GetYearBuilt() int32 {
	if x != nil && x.YearBuilt != nil {
		return *x.YearBuilt
	}
	return 0
}

func (x *MultiFamilyPropertyRequest) GetUnits() []*RentalUnitRequest {
	if x != nil {
		return x.Units
	}
	return nil
}

type RentalUnitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number     *string  `protobuf:"bytes,3,opt,name=number,proto3,oneof" json:"number,omitempty"`
	Bedrooms   *float32 `protobuf:"fixed32,8,opt,name=bedrooms,proto3,oneof" json:"bedrooms,omitempty"`
	Bathrooms  *float32 `protobuf:"fixed32,9,opt,name=bathrooms,proto3,oneof" json:"bathrooms,omitempty"`
	Size       *float32 `protobuf:"fixed32,12,opt,name=size,proto3,oneof" json:"size,omitempty"`
	RentAmount *float32 `protobuf:"fixed32,15,opt,name=rent_amount,json=rentAmount,proto3,oneof" json:"rent_amount,omitempty"`
}

func (x *RentalUnitRequest) Reset() {
	*x = RentalUnitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_property_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RentalUnitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RentalUnitRequest) ProtoMessage() {}

func (x *RentalUnitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_property_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RentalUnitRequest.ProtoReflect.Descriptor instead.
func (*RentalUnitRequest) Descriptor() ([]byte, []int) {
	return file_pb_property_proto_rawDescGZIP(), []int{10}
}

func (x *RentalUnitRequest) GetNumber() string {
	if x != nil && x.Number != nil {
		return *x.Number
	}
	return ""
}

func (x *RentalUnitRequest) GetBedrooms() float32 {
	if x != nil && x.Bedrooms != nil {
		return *x.Bedrooms
	}
	return 0
}

func (x *RentalUnitRequest) GetBathrooms() float32 {
	if x != nil && x.Bathrooms != nil {
		return *x.Bathrooms
	}
	return 0
}

func (x *RentalUnitRequest) GetSize() float32 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *RentalUnitRequest) GetRentAmount() float32 {
	if x != nil && x.RentAmount != nil {
		return *x.RentAmount
	}
	return 0
}

type AddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Line1 *string `protobuf:"bytes,1,opt,name=line1,proto3,oneof" json:"line1,omitempty"`
	Line2 *string `protobuf:"bytes,2,opt,name=line2,proto3,oneof" json:"line2,omitempty"`
	City  *string `protobuf:"bytes,3,opt,name=city,proto3,oneof" json:"city,omitempty"`
	State *string `protobuf:"bytes,4,opt,name=state,proto3,oneof" json:"state,omitempty"`
	Zip   *string `protobuf:"bytes,5,opt,name=zip,proto3,oneof" json:"zip,omitempty"`
}

func (x *AddressRequest) Reset() {
	*x = AddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_property_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressRequest) ProtoMessage() {}

func (x *AddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_property_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressRequest.ProtoReflect.Descriptor instead.
func (*AddressRequest) Descriptor() ([]byte, []int) {
	return file_pb_property_proto_rawDescGZIP(), []int{11}
}

func (x *AddressRequest) GetLine1() string {
	if x != nil && x.Line1 != nil {
		return *x.Line1
	}
	return ""
}

func (x *AddressRequest) GetLine2() string {
	if x != nil && x.Line2 != nil {
		return *x.Line2
	}
	return ""
}

func (x *AddressRequest) GetCity() string {
	if x != nil && x.City != nil {
		return *x.City
	}
	return ""
}

func (x *AddressRequest) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *AddressRequest) GetZip() string {
	if x != nil && x.Zip != nil {
		return *x.Zip
	}
	return ""
}

var File_pb_property_proto protoreflect.FileDescriptor

var file_pb_property_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f, 0x6e,
	0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x68, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x68,
	0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0xf7, 0x01, 0x0a, 0x10, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6c, 0x0a, 0x16, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79,
	0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x34, 0x2e, 0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x48, 0x00, 0x52, 0x14, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x46,
	0x61, 0x6d, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x69, 0x0a,
	0x15, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x5f, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x68,
	0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x48, 0x00, 0x52, 0x13, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x22, 0xb6, 0x02, 0x0a, 0x14, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x46,
	0x61, 0x6d, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x41, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x79, 0x65, 0x61, 0x72,
	0x5f, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x79, 0x65,
	0x61, 0x72, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x12, 0x3e, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e,
	0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x69,
	0x74, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0xb7, 0x02,
	0x0a, 0x13, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73,
	0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x1d, 0x0a, 0x0a, 0x79, 0x65, 0x61, 0x72, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x79, 0x65, 0x61, 0x72, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x12,
	0x40, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e,
	0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x05, 0x75, 0x6e, 0x69, 0x74,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0xe9, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x6e, 0x74,
	0x61, 0x6c, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x08, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61,
	0x74, 0x68, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x62,
	0x61, 0x74, 0x68, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0a, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x22, 0x71, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c,
	0x69, 0x6e, 0x65, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x32, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x7a, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x7a, 0x69, 0x70, 0x22, 0x23, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x94, 0x02, 0x0a, 0x0f,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x73, 0x0a, 0x16, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79,
	0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3b, 0x2e, 0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x14,
	0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x12, 0x70, 0x0a, 0x15, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x66, 0x61,
	0x6d, 0x69, 0x6c, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f,
	0x6e, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x13, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x22, 0xc1, 0x02, 0x0a, 0x1b, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x46, 0x61, 0x6d,
	0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x4d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f,
	0x6e, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x79, 0x65, 0x61, 0x72, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x02, 0x52, 0x09, 0x79, 0x65, 0x61, 0x72, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x4a, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x2e, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x03, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x22, 0xb4, 0x02, 0x0a, 0x1a, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73,
	0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x0d, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x88, 0x01,
	0x01, 0x12, 0x22, 0x0a, 0x0a, 0x79, 0x65, 0x61, 0x72, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x09, 0x79, 0x65, 0x61, 0x72, 0x42, 0x75, 0x69,
	0x6c, 0x74, 0x88, 0x01, 0x01, 0x12, 0x47, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d,
	0x6f, 0x6e, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x69, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x22, 0xf2, 0x01,
	0x0a, 0x11, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01,
	0x12, 0x1f, 0x0a, 0x08, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x02, 0x48, 0x01, 0x52, 0x08, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x21, 0x0a, 0x09, 0x62, 0x61, 0x74, 0x68, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x02, 0x48, 0x02, 0x52, 0x09, 0x62, 0x61, 0x74, 0x68, 0x72, 0x6f, 0x6f, 0x6d,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x02, 0x48, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a,
	0x0b, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x02, 0x48, 0x04, 0x52, 0x0a, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x62, 0x61, 0x74, 0x68, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0xc0, 0x01, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x31, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x31, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x32, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x15, 0x0a, 0x03, 0x7a, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x03,
	0x7a, 0x69, 0x70, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x31,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x32, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63,
	0x69, 0x74, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x7a, 0x69, 0x70, 0x32, 0x9a, 0x04, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x12, 0x6b, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2f, 0x2e, 0x68,
	0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e,
	0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6f, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x31, 0x2e, 0x68, 0x61,
	0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30,
	0x2e, 0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x54, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x34, 0x2e, 0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x2f, 0x2e, 0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x30, 0x2e, 0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x31, 0x2e,
	0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x30, 0x2e, 0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_pb_property_proto_rawDescOnce sync.Once
	file_pb_property_proto_rawDescData = file_pb_property_proto_rawDesc
)

func file_pb_property_proto_rawDescGZIP() []byte {
	file_pb_property_proto_rawDescOnce.Do(func() {
		file_pb_property_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_property_proto_rawDescData)
	})
	return file_pb_property_proto_rawDescData
}

var file_pb_property_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_pb_property_proto_goTypes = []interface{}{
	(*PropertyListResponse)(nil),        // 0: hausops.mono.services.property.PropertyListResponse
	(*PropertyResponse)(nil),            // 1: hausops.mono.services.property.PropertyResponse
	(*SingleFamilyProperty)(nil),        // 2: hausops.mono.services.property.SingleFamilyProperty
	(*MultiFamilyProperty)(nil),         // 3: hausops.mono.services.property.MultiFamilyProperty
	(*RentalUnit)(nil),                  // 4: hausops.mono.services.property.RentalUnit
	(*Address)(nil),                     // 5: hausops.mono.services.property.Address
	(*PropertyIDRequest)(nil),           // 6: hausops.mono.services.property.PropertyIDRequest
	(*PropertyRequest)(nil),             // 7: hausops.mono.services.property.PropertyRequest
	(*SingleFamilyPropertyRequest)(nil), // 8: hausops.mono.services.property.SingleFamilyPropertyRequest
	(*MultiFamilyPropertyRequest)(nil),  // 9: hausops.mono.services.property.MultiFamilyPropertyRequest
	(*RentalUnitRequest)(nil),           // 10: hausops.mono.services.property.RentalUnitRequest
	(*AddressRequest)(nil),              // 11: hausops.mono.services.property.AddressRequest
	(*emptypb.Empty)(nil),               // 12: google.protobuf.Empty
}
var file_pb_property_proto_depIdxs = []int32{
	1,  // 0: hausops.mono.services.property.PropertyListResponse.properties:type_name -> hausops.mono.services.property.PropertyResponse
	2,  // 1: hausops.mono.services.property.PropertyResponse.single_family_property:type_name -> hausops.mono.services.property.SingleFamilyProperty
	3,  // 2: hausops.mono.services.property.PropertyResponse.multi_family_property:type_name -> hausops.mono.services.property.MultiFamilyProperty
	5,  // 3: hausops.mono.services.property.SingleFamilyProperty.address:type_name -> hausops.mono.services.property.Address
	4,  // 4: hausops.mono.services.property.SingleFamilyProperty.unit:type_name -> hausops.mono.services.property.RentalUnit
	5,  // 5: hausops.mono.services.property.MultiFamilyProperty.address:type_name -> hausops.mono.services.property.Address
	4,  // 6: hausops.mono.services.property.MultiFamilyProperty.units:type_name -> hausops.mono.services.property.RentalUnit
	8,  // 7: hausops.mono.services.property.PropertyRequest.single_family_property:type_name -> hausops.mono.services.property.SingleFamilyPropertyRequest
	9,  // 8: hausops.mono.services.property.PropertyRequest.multi_family_property:type_name -> hausops.mono.services.property.MultiFamilyPropertyRequest
	11, // 9: hausops.mono.services.property.SingleFamilyPropertyRequest.address:type_name -> hausops.mono.services.property.AddressRequest
	10, // 10: hausops.mono.services.property.SingleFamilyPropertyRequest.unit:type_name -> hausops.mono.services.property.RentalUnitRequest
	11, // 11: hausops.mono.services.property.MultiFamilyPropertyRequest.address:type_name -> hausops.mono.services.property.AddressRequest
	10, // 12: hausops.mono.services.property.MultiFamilyPropertyRequest.units:type_name -> hausops.mono.services.property.RentalUnitRequest
	7,  // 13: hausops.mono.services.property.Property.Create:input_type -> hausops.mono.services.property.PropertyRequest
	6,  // 14: hausops.mono.services.property.Property.FindByID:input_type -> hausops.mono.services.property.PropertyIDRequest
	12, // 15: hausops.mono.services.property.Property.List:input_type -> google.protobuf.Empty
	7,  // 16: hausops.mono.services.property.Property.Update:input_type -> hausops.mono.services.property.PropertyRequest
	6,  // 17: hausops.mono.services.property.Property.Delete:input_type -> hausops.mono.services.property.PropertyIDRequest
	1,  // 18: hausops.mono.services.property.Property.Create:output_type -> hausops.mono.services.property.PropertyResponse
	1,  // 19: hausops.mono.services.property.Property.FindByID:output_type -> hausops.mono.services.property.PropertyResponse
	0,  // 20: hausops.mono.services.property.Property.List:output_type -> hausops.mono.services.property.PropertyListResponse
	1,  // 21: hausops.mono.services.property.Property.Update:output_type -> hausops.mono.services.property.PropertyResponse
	1,  // 22: hausops.mono.services.property.Property.Delete:output_type -> hausops.mono.services.property.PropertyResponse
	18, // [18:23] is the sub-list for method output_type
	13, // [13:18] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_pb_property_proto_init() }
func file_pb_property_proto_init() {
	if File_pb_property_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_property_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_property_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_property_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleFamilyProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_property_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiFamilyProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_property_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RentalUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_property_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_property_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_property_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_property_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleFamilyPropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_property_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiFamilyPropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_property_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RentalUnitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_property_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pb_property_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*PropertyResponse_SingleFamilyProperty)(nil),
		(*PropertyResponse_MultiFamilyProperty)(nil),
	}
	file_pb_property_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*PropertyRequest_SingleFamilyProperty)(nil),
		(*PropertyRequest_MultiFamilyProperty)(nil),
	}
	file_pb_property_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_pb_property_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_pb_property_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_pb_property_proto_msgTypes[11].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_property_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_property_proto_goTypes,
		DependencyIndexes: file_pb_property_proto_depIdxs,
		MessageInfos:      file_pb_property_proto_msgTypes,
	}.Build()
	File_pb_property_proto = out.File
	file_pb_property_proto_rawDesc = nil
	file_pb_property_proto_goTypes = nil
	file_pb_property_proto_depIdxs = nil
}
