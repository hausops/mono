// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.19.4
// source: pb/property.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SingleFamilyProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address       *Address `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	CoverImageUrl string   `protobuf:"bytes,10,opt,name=cover_image_url,json=coverImageUrl,proto3" json:"cover_image_url,omitempty"`
	YearBuilt     int32    `protobuf:"varint,12,opt,name=year_built,json=yearBuilt,proto3" json:"year_built,omitempty"`
}

func (x *SingleFamilyProperty) Reset() {
	*x = SingleFamilyProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_property_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleFamilyProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleFamilyProperty) ProtoMessage() {}

func (x *SingleFamilyProperty) ProtoReflect() protoreflect.Message {
	mi := &file_pb_property_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleFamilyProperty.ProtoReflect.Descriptor instead.
func (*SingleFamilyProperty) Descriptor() ([]byte, []int) {
	return file_pb_property_proto_rawDescGZIP(), []int{0}
}

func (x *SingleFamilyProperty) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SingleFamilyProperty) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *SingleFamilyProperty) GetCoverImageUrl() string {
	if x != nil {
		return x.CoverImageUrl
	}
	return ""
}

func (x *SingleFamilyProperty) GetYearBuilt() int32 {
	if x != nil {
		return x.YearBuilt
	}
	return 0
}

type MultiFamilyProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address       *Address `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	CoverImageUrl string   `protobuf:"bytes,10,opt,name=cover_image_url,json=coverImageUrl,proto3" json:"cover_image_url,omitempty"`
	YearBuilt     int32    `protobuf:"varint,12,opt,name=year_built,json=yearBuilt,proto3" json:"year_built,omitempty"`
}

func (x *MultiFamilyProperty) Reset() {
	*x = MultiFamilyProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_property_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiFamilyProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiFamilyProperty) ProtoMessage() {}

func (x *MultiFamilyProperty) ProtoReflect() protoreflect.Message {
	mi := &file_pb_property_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiFamilyProperty.ProtoReflect.Descriptor instead.
func (*MultiFamilyProperty) Descriptor() ([]byte, []int) {
	return file_pb_property_proto_rawDescGZIP(), []int{1}
}

func (x *MultiFamilyProperty) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MultiFamilyProperty) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *MultiFamilyProperty) GetCoverImageUrl() string {
	if x != nil {
		return x.CoverImageUrl
	}
	return ""
}

func (x *MultiFamilyProperty) GetYearBuilt() int32 {
	if x != nil {
		return x.YearBuilt
	}
	return 0
}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Line1 string `protobuf:"bytes,1,opt,name=line1,proto3" json:"line1,omitempty"`
	Line2 string `protobuf:"bytes,2,opt,name=line2,proto3" json:"line2,omitempty"`
	City  string `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	State string `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	Zip   string `protobuf:"bytes,5,opt,name=zip,proto3" json:"zip,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_property_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_pb_property_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_pb_property_proto_rawDescGZIP(), []int{2}
}

func (x *Address) GetLine1() string {
	if x != nil {
		return x.Line1
	}
	return ""
}

func (x *Address) GetLine2() string {
	if x != nil {
		return x.Line2
	}
	return ""
}

func (x *Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Address) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Address) GetZip() string {
	if x != nil {
		return x.Zip
	}
	return ""
}

type PropertyIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PropertyIDRequest) Reset() {
	*x = PropertyIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_property_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyIDRequest) ProtoMessage() {}

func (x *PropertyIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_property_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyIDRequest.ProtoReflect.Descriptor instead.
func (*PropertyIDRequest) Descriptor() ([]byte, []int) {
	return file_pb_property_proto_rawDescGZIP(), []int{3}
}

func (x *PropertyIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PropertyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Property:
	//
	//	*PropertyResponse_SingleFamilyProperty
	//	*PropertyResponse_MultiFamilyProperty
	Property isPropertyResponse_Property `protobuf_oneof:"property"`
}

func (x *PropertyResponse) Reset() {
	*x = PropertyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_property_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyResponse) ProtoMessage() {}

func (x *PropertyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_property_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyResponse.ProtoReflect.Descriptor instead.
func (*PropertyResponse) Descriptor() ([]byte, []int) {
	return file_pb_property_proto_rawDescGZIP(), []int{4}
}

func (m *PropertyResponse) GetProperty() isPropertyResponse_Property {
	if m != nil {
		return m.Property
	}
	return nil
}

func (x *PropertyResponse) GetSingleFamilyProperty() *SingleFamilyProperty {
	if x, ok := x.GetProperty().(*PropertyResponse_SingleFamilyProperty); ok {
		return x.SingleFamilyProperty
	}
	return nil
}

func (x *PropertyResponse) GetMultiFamilyProperty() *MultiFamilyProperty {
	if x, ok := x.GetProperty().(*PropertyResponse_MultiFamilyProperty); ok {
		return x.MultiFamilyProperty
	}
	return nil
}

type isPropertyResponse_Property interface {
	isPropertyResponse_Property()
}

type PropertyResponse_SingleFamilyProperty struct {
	SingleFamilyProperty *SingleFamilyProperty `protobuf:"bytes,1,opt,name=single_family_property,json=singleFamilyProperty,proto3,oneof"`
}

type PropertyResponse_MultiFamilyProperty struct {
	MultiFamilyProperty *MultiFamilyProperty `protobuf:"bytes,2,opt,name=multi_family_property,json=multiFamilyProperty,proto3,oneof"`
}

func (*PropertyResponse_SingleFamilyProperty) isPropertyResponse_Property() {}

func (*PropertyResponse_MultiFamilyProperty) isPropertyResponse_Property() {}

type SingleFamilyPropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address       *Address `protobuf:"bytes,3,opt,name=address,proto3,oneof" json:"address,omitempty"`
	CoverImageUrl *string  `protobuf:"bytes,10,opt,name=cover_image_url,json=coverImageUrl,proto3,oneof" json:"cover_image_url,omitempty"`
	YearBuilt     *int32   `protobuf:"varint,12,opt,name=year_built,json=yearBuilt,proto3,oneof" json:"year_built,omitempty"`
}

func (x *SingleFamilyPropertyRequest) Reset() {
	*x = SingleFamilyPropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_property_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleFamilyPropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleFamilyPropertyRequest) ProtoMessage() {}

func (x *SingleFamilyPropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_property_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleFamilyPropertyRequest.ProtoReflect.Descriptor instead.
func (*SingleFamilyPropertyRequest) Descriptor() ([]byte, []int) {
	return file_pb_property_proto_rawDescGZIP(), []int{5}
}

func (x *SingleFamilyPropertyRequest) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *SingleFamilyPropertyRequest) GetCoverImageUrl() string {
	if x != nil && x.CoverImageUrl != nil {
		return *x.CoverImageUrl
	}
	return ""
}

func (x *SingleFamilyPropertyRequest) GetYearBuilt() int32 {
	if x != nil && x.YearBuilt != nil {
		return *x.YearBuilt
	}
	return 0
}

type MultiFamilyPropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address       *Address `protobuf:"bytes,3,opt,name=address,proto3,oneof" json:"address,omitempty"`
	CoverImageUrl *string  `protobuf:"bytes,10,opt,name=cover_image_url,json=coverImageUrl,proto3,oneof" json:"cover_image_url,omitempty"`
	YearBuilt     *int32   `protobuf:"varint,12,opt,name=year_built,json=yearBuilt,proto3,oneof" json:"year_built,omitempty"`
}

func (x *MultiFamilyPropertyRequest) Reset() {
	*x = MultiFamilyPropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_property_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiFamilyPropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiFamilyPropertyRequest) ProtoMessage() {}

func (x *MultiFamilyPropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_property_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiFamilyPropertyRequest.ProtoReflect.Descriptor instead.
func (*MultiFamilyPropertyRequest) Descriptor() ([]byte, []int) {
	return file_pb_property_proto_rawDescGZIP(), []int{6}
}

func (x *MultiFamilyPropertyRequest) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *MultiFamilyPropertyRequest) GetCoverImageUrl() string {
	if x != nil && x.CoverImageUrl != nil {
		return *x.CoverImageUrl
	}
	return ""
}

func (x *MultiFamilyPropertyRequest) GetYearBuilt() int32 {
	if x != nil && x.YearBuilt != nil {
		return *x.YearBuilt
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_property_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_pb_property_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_pb_property_proto_rawDescGZIP(), []int{7}
}

var File_pb_property_proto protoreflect.FileDescriptor

var file_pb_property_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f, 0x6e,
	0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x22, 0xb0, 0x01, 0x0a, 0x14, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x46, 0x61,
	0x6d, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x79, 0x65, 0x61, 0x72, 0x5f,
	0x62, 0x75, 0x69, 0x6c, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x79, 0x65, 0x61,
	0x72, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x22, 0xaf, 0x01, 0x0a, 0x13, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x41,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x79, 0x65, 0x61,
	0x72, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x79,
	0x65, 0x61, 0x72, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x22, 0x71, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x31, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e,
	0x65, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x32, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x7a, 0x69, 0x70,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x7a, 0x69, 0x70, 0x22, 0x23, 0x0a, 0x11, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xf7, 0x01, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x16, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f,
	0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e,
	0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x46, 0x61, 0x6d,
	0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x48, 0x00, 0x52, 0x14, 0x73,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x12, 0x69, 0x0a, 0x15, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x66, 0x61, 0x6d,
	0x69, 0x6c, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f, 0x6e,
	0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x48, 0x00, 0x52, 0x13, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x42, 0x0a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x22, 0xe5, 0x01, 0x0a, 0x1b, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x68, 0x61,
	0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x0a, 0x79, 0x65, 0x61, 0x72, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x09, 0x79, 0x65, 0x61, 0x72, 0x42, 0x75, 0x69, 0x6c, 0x74,
	0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42,
	0x12, 0x0a, 0x10, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x5f, 0x62, 0x75, 0x69,
	0x6c, 0x74, 0x22, 0xe4, 0x01, 0x0a, 0x1a, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x46, 0x61, 0x6d, 0x69,
	0x6c, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x46, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f, 0x6e,
	0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x79, 0x65, 0x61, 0x72, 0x5f, 0x62,
	0x75, 0x69, 0x6c, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x09, 0x79, 0x65,
	0x61, 0x72, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x79,
	0x65, 0x61, 0x72, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x32, 0xff, 0x03, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12,
	0x6f, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x31, 0x2e, 0x68, 0x61,
	0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30,
	0x2e, 0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x61, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x68, 0x61, 0x75, 0x73, 0x6f,
	0x70, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x30, 0x2e, 0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x30, 0x01, 0x12, 0x8f, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x12, 0x3b, 0x2e, 0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f, 0x6e,
	0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x34, 0x2e, 0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x8c, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x12, 0x3a, 0x2e, 0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f,
	0x6e, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x33, 0x2e, 0x68, 0x61, 0x75, 0x73, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_property_proto_rawDescOnce sync.Once
	file_pb_property_proto_rawDescData = file_pb_property_proto_rawDesc
)

func file_pb_property_proto_rawDescGZIP() []byte {
	file_pb_property_proto_rawDescOnce.Do(func() {
		file_pb_property_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_property_proto_rawDescData)
	})
	return file_pb_property_proto_rawDescData
}

var file_pb_property_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_pb_property_proto_goTypes = []interface{}{
	(*SingleFamilyProperty)(nil),        // 0: hausops.mono.services.property.SingleFamilyProperty
	(*MultiFamilyProperty)(nil),         // 1: hausops.mono.services.property.MultiFamilyProperty
	(*Address)(nil),                     // 2: hausops.mono.services.property.Address
	(*PropertyIDRequest)(nil),           // 3: hausops.mono.services.property.PropertyIDRequest
	(*PropertyResponse)(nil),            // 4: hausops.mono.services.property.PropertyResponse
	(*SingleFamilyPropertyRequest)(nil), // 5: hausops.mono.services.property.SingleFamilyPropertyRequest
	(*MultiFamilyPropertyRequest)(nil),  // 6: hausops.mono.services.property.MultiFamilyPropertyRequest
	(*Empty)(nil),                       // 7: hausops.mono.services.property.Empty
}
var file_pb_property_proto_depIdxs = []int32{
	2,  // 0: hausops.mono.services.property.SingleFamilyProperty.address:type_name -> hausops.mono.services.property.Address
	2,  // 1: hausops.mono.services.property.MultiFamilyProperty.address:type_name -> hausops.mono.services.property.Address
	0,  // 2: hausops.mono.services.property.PropertyResponse.single_family_property:type_name -> hausops.mono.services.property.SingleFamilyProperty
	1,  // 3: hausops.mono.services.property.PropertyResponse.multi_family_property:type_name -> hausops.mono.services.property.MultiFamilyProperty
	2,  // 4: hausops.mono.services.property.SingleFamilyPropertyRequest.address:type_name -> hausops.mono.services.property.Address
	2,  // 5: hausops.mono.services.property.MultiFamilyPropertyRequest.address:type_name -> hausops.mono.services.property.Address
	3,  // 6: hausops.mono.services.property.Property.FindByID:input_type -> hausops.mono.services.property.PropertyIDRequest
	7,  // 7: hausops.mono.services.property.Property.List:input_type -> hausops.mono.services.property.Empty
	5,  // 8: hausops.mono.services.property.Property.CreateSingleFamilyProperty:input_type -> hausops.mono.services.property.SingleFamilyPropertyRequest
	6,  // 9: hausops.mono.services.property.Property.CreateMultiFamilyProperty:input_type -> hausops.mono.services.property.MultiFamilyPropertyRequest
	4,  // 10: hausops.mono.services.property.Property.FindByID:output_type -> hausops.mono.services.property.PropertyResponse
	4,  // 11: hausops.mono.services.property.Property.List:output_type -> hausops.mono.services.property.PropertyResponse
	0,  // 12: hausops.mono.services.property.Property.CreateSingleFamilyProperty:output_type -> hausops.mono.services.property.SingleFamilyProperty
	1,  // 13: hausops.mono.services.property.Property.CreateMultiFamilyProperty:output_type -> hausops.mono.services.property.MultiFamilyProperty
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_pb_property_proto_init() }
func file_pb_property_proto_init() {
	if File_pb_property_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_property_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleFamilyProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_property_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiFamilyProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_property_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_property_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_property_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_property_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleFamilyPropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_property_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiFamilyPropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_property_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pb_property_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*PropertyResponse_SingleFamilyProperty)(nil),
		(*PropertyResponse_MultiFamilyProperty)(nil),
	}
	file_pb_property_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_pb_property_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_property_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_property_proto_goTypes,
		DependencyIndexes: file_pb_property_proto_depIdxs,
		MessageInfos:      file_pb_property_proto_msgTypes,
	}.Build()
	File_pb_property_proto = out.File
	file_pb_property_proto_rawDesc = nil
	file_pb_property_proto_goTypes = nil
	file_pb_property_proto_depIdxs = nil
}
