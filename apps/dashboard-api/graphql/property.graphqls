"""
Query
"""
union Property = SingleFamilyProperty | MultiFamilyProperty

interface PropertyInfo {
  id: ID!
  coverImageUrl: String
  address: Address!
  yearBuilt: Int
}

type SingleFamilyProperty implements PropertyInfo {
  id: ID!
  coverImageUrl: String
  address: Address!
  yearBuilt: Int
  unit: SingleFamilyPropertyUnit!
}

type SingleFamilyPropertyUnit {
  id: ID!
  bedrooms: Float
  bathrooms: Float
  size: Float
  rentAmount: Float
  activeListing: RentalListing
}

type MultiFamilyProperty implements PropertyInfo {
  id: ID!
  coverImageUrl: String
  address: Address!
  yearBuilt: Int
  units: [MultiFamilyPropertyUnit!]!
}

type MultiFamilyPropertyUnit {
  id: ID!
  # unit number; should be a string
  number: String!
  bedrooms: Float
  bathrooms: Float
  size: Float
  rentAmount: Float
  activeListing: RentalListing
}

type Address {
  line1: String!
  line2: String
  city: String!
  state: String!
  zip: String!
}

# rental listing for a unit
type RentalListing {
  id: ID!
}

"""
Mutation
"""
input CreateSingleFamilyPropertyInput {
  coverImageUrl: String
  address: CreateAddressInput!
  yearBuilt: Int
  unit: CreateSingleFamilyPropertyUnitInput!
}

input CreateSingleFamilyPropertyUnitInput {
  bedrooms: Float
  bathrooms: Float
  size: Float
  rentAmount: Float
}

input CreateMultiFamilyPropertyInput {
  coverImageUrl: String
  address: CreateAddressInput!
  yearBuilt: Int
  units: [CreateMultiFamilyPropertyUnitInput!]!
}

input CreateMultiFamilyPropertyUnitInput {
  # unit number; should be a string
  number: String!
  bedrooms: Float
  bathrooms: Float
  size: Float
  rentAmount: Float
}

input CreateAddressInput {
  line1: String!
  line2: String
  city: String!
  state: String!
  zip: String!
}

input UpdateSingleFamilyPropertyInput {
  coverImageUrl: String
  address: UpdateAdderssInput
  yearBuilt: Int
  unit: UpdateSingleFamilyPropertyUnitInput
}

input UpdateSingleFamilyPropertyUnitInput {
  bedrooms: Float
  bathrooms: Float
  size: Float
  rentAmount: Float
}

input UpdateMultiFamilyPropertyInput {
  coverImageUrl: String
  address: UpdateAdderssInput
  yearBuilt: Int

  # TODO updating unit by id via a separate mutation
}

input UpdateAdderssInput {
  line1: String
  line2: String
  city: String
  state: String
  zip: String
}
